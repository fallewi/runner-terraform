name: Terraform CI/CD avec Checkov et rapport

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Permet de déclencher manuellement ce workflow

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Configurer les identifiants AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  # Si vous utilisez un token de session AWS
        aws-region: eu-west-1  # Spécifiez votre région

    - name: Installer Checkov
      run: |
        python3 -m pip install --upgrade pip
        pip install checkov

    - name: Exécuter Checkov et générer un rapport JSON
      run: |
        checkov -d . --output json > checkov_report.json
      continue-on-error: true  # Cette ligne permet d'ignorer les échecs de Checkov et de continuer

    - name: Télécharger le rapport Checkov comme artefact
      uses: actions/upload-artifact@v4
      with:
        name: checkov-report
        path: checkov_report.json

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

  # Job de suppression manuelle
  destroy:
    runs-on: ubuntu-latest
    needs: terraform  # Ce job dépend du job terraform

    # Ce job ne s'exécute que manuellement
    if: ${{ github.event_name == 'workflow_dispatch' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Configurer les identifiants AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  # Si vous utilisez un token de session AWS
        aws-region: us-east-1  # Spécifiez votre région

    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
